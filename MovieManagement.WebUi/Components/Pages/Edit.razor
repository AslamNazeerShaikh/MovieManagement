@page "/edit/{id:int}"
@inject IMovieRepository Repository
@inject NavigationManager Navigation

<PageTitle>Edit Movie</PageTitle>

@if (Movie is not null)
{
    <div class="row justify-content-center">
        <div class="col-6">
            <EditForm Enhance="true" class="border rounded p-2" method="post"
                      FormName="EditMovieForm" OnValidSubmit="EditMovie" Model="Movie" autocomplete="off">
                <h3>
                    Edit Movie @Id
                </h3>
                <input type="hidden" name="Movie.MovieId" value="@Movie.MovieId"/>
                <div class="mb-3">
                    <lable for="title" class="form-label">
                        Title
                    </lable>
                    <InputText id="title" @bind-Value="Movie.MovieName" class="form-control">
                    </InputText>
                </div>
                <div class="mb-3">
                    <lable for="author" class="form-label">
                        Author
                    </lable>
                    <InputText id="author" @bind-Value="Movie.MovieAuthor" class="form-control">
                    </InputText>
                </div>
                <div class="mb-3">
                    <lable for="published" class="form-label">
                        Publish Date
                    </lable>
                    <InputDate id="published" @bind-Value="Movie.PublishDate" class="form-control">
                    </InputDate>
                </div>
                <div class="mb-3">
                    <lable for="category" class="form-label">
                        Category
                    </lable>
                    <InputSelect id="category" @bind-Value="Movie.Category" class="form-control">
                        <option value="0">
                            Select Category
                        </option>
                        @foreach (var category in Enum.GetValues(typeof(Category)))
                        {
                            <option value="@category">
                                @category.ToString()
                            </option>
                        }
                    </InputSelect>
                </div>
                <div class="">
                    <button class="btn btn-primary">
                        Submit
                    </button>
                    <a href="/" class="btn btn-secondary">
                        Back to List
                    </a>
                </div>
                <DataAnnotationsValidator/>
                <ValidationSummary/>
            </EditForm>
        </div>
    </div>
} 

@code {

    [Parameter] public int Id { get; set; }

    [SupplyParameterFromForm] public Movie? Movie { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Movie ??= await Repository.GetByIdAsync(Id);
    }

    private async Task EditMovie()
    {
        if (Movie is not null)
        {
            await Repository.UpdateAsync(Movie);
            Navigation.NavigateTo("/");
        }
    }

}